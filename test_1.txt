1) os, random, datetime, tkinter
2) 
	randint(a, b) возвращает псевдослучайное число ав промежутеке от a до b
	choice(seq) возвращает случайный элемент из не пустй последовательности
!!!!!3)
4)оператор присваивает перменной "a" значение 5
!!!!!5)import
6) МУИВ, Факультет информатики, курс: 2
7) __builtins__
!!!!!8)
	print 
	filter
	map
	char
	ord
	len
	max
	min
	sort
	summ
9) ошибку, по скольку в 4 строке не стоят кавчки.
	при изменении на 
			"'l33t'", "'haxx0r'", 1337) 
	будет выведено 
			['l33t', 'haxx0r', 1337, 'bbqpwn']
10) конструктор создает в переменной "students" список с объектами класса student, которым конструктор даёт name
	Студент: Ваня)
	Студент: Маша)
	Студент: Петя)
11) программист пытался перевсти арабские числа в римские, но функция не правильная, 
	первое нужно 11 строчки поставить перед нынешней восьмой,
	второе код не учитывает что к примеру 4 = IV
12)  20 30 (любое число которое < 160)
13) 160, больше таких числе нет, поскольку:
	поскольку любое число < 160 уйжет в бессконечный цикл 
	Если для числа нужно вывести I или V, то мы не выведем их,
	потому что цикл заканчивается на условии 'index > 1', так что мы не проверим index = 0 и index = 1.
	Иначе же для числа нужно вывести X, L или C больше одного раза, 
	как например в числе 200 (CC). Но в коде функции мы рассмотрим каждый символ не более одного раза,
	поскольку в 11-ой строке мы всегда убавляем index
14)
# romanize returns the Romans representation of the given number.
def romanize(number: int):
    if number <= 0 or number > 399:
        raise Exception('Number should be in [1, 399] range')
    conv = [(100, 'C'),
            (50, 'L'), (10, 'X'),
            (5, 'V'), (1, 'I')]
    result = [0] * len(conv)
    is_positive = [True] * len(conv)
    for i, (value, _) in enumerate(conv):
        result[i] = number // value
        number -= result[i] * value
        if result[i] == 4:
            result[i] = 1
            if result[i-1] == 0:
                result[i-1] += 1
                is_positive[i-1] = False
            else:
                result[i-2] += 1
                result[i-1] = 0
                is_positive[i-2] = False
    s = ''
    for i, (_, c) in enumerate(conv):
        if is_positive[i]:
            s += c * result[i]
        else:
            if result[i+1] == 0:
                s += (result[i]-1) * c + conv[i+2][1] + c
                result[i+2] = 0
            else:
                s += (result[i]-1) * c + conv[i+1][1] + c
                result[i+1] = 0
    return s


while True:
    a = int(input())
    if a == -1:
        break
    romanized = romanize(a)
    print(romanized)
